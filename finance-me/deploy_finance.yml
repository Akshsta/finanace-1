---
- name: Deploy FinanceMe Spring Boot App
  hosts: ec2_finance
  become: true

  vars:
    app_name: finance-me
    jar_src: "/home/ubuntu/banking-finance-Me/finance-me/finance-me.jar"
    jar_dest: "/home/ubuntu/banking-finance-Me/finance-me.jar"
    mysql_host: financeme-db.c0bc2iimm973.us-east-1.rds.amazonaws.com
    mysql_db: financeme-db
    mysql_user: admin
    mysql_password: Akshata1999
    spring_profile: prod
    host_port: 8081
    container_port: 8080

  tasks:
    - name: Update APT cache
      apt:
        update_cache: yes
        cache_valid_time: 3600

    - name: Remove conflicting containerd package
      apt:
        name: containerd
        state: absent

    - name: Install Docker
      apt:
        name: docker.io
        state: present

    - name: Start and enable Docker service
      service:
        name: docker
        state: started
        enabled: yes

    - name: Wait for Docker socket
      wait_for:
        path: /var/run/docker.sock
        state: started
        timeout: 30

    - name: Copy Spring Boot JAR to instance
      copy:
        src: "{{ jar_src }}"
        dest: "{{ jar_dest }}"
        mode: '0755'

    - name: Stop any existing container
      shell: |
        docker stop {{ app_name }} || true
        docker rm {{ app_name }} || true

    - name: Build Docker image for finance-me
      shell: docker build -t finance-me-image /home/ubuntu/banking-finance-Me/finance-me/

    - name: Run Spring Boot App in Docker
      shell: |
        docker run -d --name {{ app_name }} \
          -e SPRING_DATASOURCE_URL="jdbc:mysql://{{ mysql_host }}:3306/{{ mysql_db }}" \
          -e SPRING_DATASOURCE_USERNAME="{{ mysql_user }}" \
          -e SPRING_DATASOURCE_PASSWORD="{{ mysql_password }}" \
          -e SPRING_PROFILES_ACTIVE="{{ spring_profile }}" \
          -p {{ host_port }}:{{ container_port }} \
          finance-me-image

